
services:
  # Oracle Database
  database:
    image: gvenzl/oracle-free:latest
    container_name: oracle-db
    ports:
      - "1521:1521"
    environment:
      - ORACLE_PASSWORD=Oracle123
      - APP_USER=appuser
      - APP_USER_PASSWORD=Oracle123
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./database:/container-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        APP_VERSION: ${APP_VERSION:-1.0.0}
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=database
      - DB_PORT=1521
      - DB_SERVICE=FREEPDB1
      - DB_USER=appuser
      - DB_PASSWORD=Oracle123
      - JAVA_OPTS=-Xms256m -Xmx512m
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        APP_VERSION: ${APP_VERSION:-1.0.0}
    container_name: frontend
    environment:
      - BACKEND_URL=http://backend:8080
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Nginx Reverse Proxy f√ºr Custom Domains
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  oracle-data:
    driver: local

networks:
  app-network:
    driver: bridge

