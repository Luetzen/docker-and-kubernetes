{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "fullstack-app.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
        component: backend
        version: {{ .Values.backend.image.tag }}
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.backend.service.port }}
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap.name }}
              key: SPRING_PROFILES_ACTIVE
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap.name }}
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap.name }}
              key: DB_PORT
        - name: DB_SERVICE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap.name }}
              key: DB_SERVICE
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap.name }}
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: DB_PASSWORD
        - name: JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap.name }}
              key: JAVA_OPTS
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.backend.service.port }}
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.backend.service.port }}
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
{{- end }}

